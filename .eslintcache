[{"F:\\Project\\TensorApp\\src\\App.js":"1","F:\\Project\\TensorApp\\src\\index.js":"2","F:\\Project\\TensorApp\\src\\components\\СhatDialog\\ChatDialog.jsx":"3","F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\ChannelMenu.jsx":"4","F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\CommonChannel.jsx":"5","F:\\Project\\TensorApp\\src\\components\\СhatDialog\\ChatButton.jsx":"6","F:\\Project\\TensorApp\\src\\reportWebVitals.js":"7","F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\MenuSidebar.jsx":"8","F:\\Project\\TensorApp\\src\\script.js":"9"},{"size":1040,"mtime":1607373175870,"results":"10","hashOfConfig":"11"},{"size":624,"mtime":1607342122640,"results":"12","hashOfConfig":"11"},{"size":5335,"mtime":1607364253512,"results":"13","hashOfConfig":"11"},{"size":1849,"mtime":1607374120422,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1607374136951,"results":"15","hashOfConfig":"11"},{"size":499,"mtime":1607346966702,"results":"16","hashOfConfig":"11"},{"size":375,"mtime":1607283655264,"results":"17","hashOfConfig":"11"},{"size":332,"mtime":1607373062851,"results":"18","hashOfConfig":"11"},{"size":1691,"mtime":1607367995116,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"64pqx7",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Project\\TensorApp\\src\\App.js",[],"F:\\Project\\TensorApp\\src\\index.js",[],["40","41"],"F:\\Project\\TensorApp\\src\\components\\СhatDialog\\ChatDialog.jsx",["42","43","44","45"],"import { Component, React } from 'react';\r\nimport ChatButton from './ChatButton';\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport default class ChatDialog extends Component {\r\n    constructor(prpos) {\r\n        super(prpos);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //componentDidMount()\r\n        fetch(\"http://localhost:5000/messages/data\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    gettingMessages = (e) => {\r\n        e.preventDefault()\r\n        fetch(\"http://localhost:5000/messages/get_message\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n        var avatars = new Map();\r\n        avatars.set('Politics', 'https://sun9-46.userapi.com/impg/DxyuDuQ_tB9qAmdz7cVLNnT3ZKuyzOT2kVU4mw/aGmeF-Bqfz0.jpg?size=700x700&quality=96&proxy=1&sign=1518007cd26ce8dd6f30edf26ba11ef0&type=album')\r\n        avatars.set('Art', 'https://sun9-25.userapi.com/impg/0TFzhC0aJ_n0oYIyzfh-U7X_Vu3ykwL-Gyzm9g/dV9sWGR-9ew.jpg?size=500x500&quality=96&proxy=1&sign=6f1042fc3e19329b553aa88762e64f4e&type=album')\r\n        avatars.set('Science', 'https://sun9-14.userapi.com/impg/1fKSdBpqngBA_NytCXOdiHOGLwzgjnNEoEoEhg/QBIMczy91w0.jpg?size=700x700&quality=96&proxy=1&sign=b9fdfddb2a64686ba03d1a844cb6d522&type=album')\r\n        avatars.set('Music', 'https://sun9-7.userapi.com/impg/gPE1LEUjvrU-YLiGTWRSC8-c_6-AM-lX5AwQ8g/Xo4AP8Btd40.jpg?size=700x700&quality=96&proxy=1&sign=54fd5c2fa46dcbc63343f45c00bf982b&type=album')\r\n        var avatar_name = new Map();\r\n        avatar_name.set('Politics', 'Марк Багдасаров')\r\n        avatar_name.set('Art', 'Гвидон Вишневский')\r\n        avatar_name.set('Science', 'Инженер')\r\n        avatar_name.set('Music', 'Роза-робот')\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <p>error</p>\r\n        }\r\n        else if (!isLoaded) {\r\n            return <p>Loading...</p>\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"chat__dialog\">\r\n                    <div class=\"chat__dialog-container\">\r\n                        <div class=\"chat__dialog-messages\">\r\n                            {items.map(message => {\r\n                                if (message.format == \"Mem\") {\r\n                                    return <span class=\"chat__dialog-message\">\r\n                                        <img class=\"user-image\"\r\n                                            src={avatars.get(message.type)}\r\n                                            alt={message.type_news} />\r\n                                        <p class=\"chat__dialog-message-text dialog-text-settings message-text\">{avatar_name.get(message.type)}</p>\r\n                                        <span class=\"chat__dialog-message-fill\">\r\n                                            <a href={message.url} target=\"_blank\" ><img class=\"message-image\"\r\n                                                src={message.url}\r\n                                                alt={message.format} />\r\n                                            </a>\r\n                                        </span>\r\n                                    </span>\r\n                                }\r\n                                else if (message.format == \"Video\") {\r\n                                    return <span class=\"chat__dialog-message\">\r\n                                        <img class=\"user-image\"\r\n                                            src={avatars.get(message.type)}\r\n                                            alt={message.type_news} />\r\n                                        <p class=\"chat__dialog-message-text dialog-text-settings message-text\">{avatar_name.get(message.type)}</p>\r\n                                        <span class=\"chat__dialog-message-fill\">\r\n                                            <ReactPlayer class=\"message-video\" controls=\"true\" height=\"200px\" width=\"350px\" url={message.url} />\r\n                                        </span>\r\n                                    </span>\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    <ChatButton gettingMessages={this.gettingMessages} />\r\n                </div >\r\n            )\r\n        }\r\n    }\r\n}","F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\ChannelMenu.jsx",["46","47","48","49","50","51","52","53"],"F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\CommonChannel.jsx",["54","55"],"F:\\Project\\TensorApp\\src\\components\\СhatDialog\\ChatButton.jsx",[],"F:\\Project\\TensorApp\\src\\reportWebVitals.js",[],"F:\\Project\\TensorApp\\src\\components\\ChannelMenu\\MenuSidebar.jsx",[],"F:\\Project\\TensorApp\\src\\script.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":82,"column":48,"nodeType":"62","messageId":"63","endLine":82,"endColumn":50},{"ruleId":"64","severity":1,"message":"65","line":83,"column":52,"nodeType":"66","messageId":"67","endLine":83,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":90,"column":67,"nodeType":"70","endLine":90,"endColumn":82},{"ruleId":"64","severity":1,"message":"65","line":97,"column":57,"nodeType":"66","messageId":"67","endLine":97,"endColumn":59},{"ruleId":"71","severity":1,"message":"72","line":7,"column":9,"nodeType":"73","endLine":7,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":8,"column":13,"nodeType":"73","endLine":8,"endColumn":230},{"ruleId":"71","severity":1,"message":"72","line":11,"column":9,"nodeType":"73","endLine":11,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":12,"column":13,"nodeType":"73","endLine":12,"endColumn":229},{"ruleId":"71","severity":1,"message":"72","line":15,"column":9,"nodeType":"73","endLine":15,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":16,"column":13,"nodeType":"73","endLine":16,"endColumn":230},{"ruleId":"71","severity":1,"message":"72","line":19,"column":9,"nodeType":"73","endLine":19,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":20,"column":13,"nodeType":"73","endLine":20,"endColumn":230},{"ruleId":"71","severity":1,"message":"72","line":8,"column":17,"nodeType":"73","endLine":8,"endColumn":62},{"ruleId":"74","severity":1,"message":"75","line":9,"column":21,"nodeType":"73","endLine":9,"endColumn":62},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]